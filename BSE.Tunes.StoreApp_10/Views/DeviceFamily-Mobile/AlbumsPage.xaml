<Page
    x:Class="BSE.Tunes.StoreApp.Views.AlbumsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BSE.Tunes.StoreApp.Views"
    xmlns:controls="using:Template10.Controls"
    xmlns:controlextensions="using:BSE.Tunes.StoreApp.Controls.Extensions"
    xmlns:vm="using:BSE.Tunes.StoreApp.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:usercontrols="using:BSE.Tunes.StoreApp.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:AlbumsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.BottomAppBar>
        <CommandBar x:Uid="BottomAppBar" Visibility="{Binding IsCommandBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
            <AppBarButton x:Uid="ButtonClearSelection" Icon="Bullets" Command="{Binding ClearSelectionCommand}"/>
            <AppBarSeparator/>
            <AppBarButton x:Uid="ButtonPlaySelection" Icon="Play" Command="{Binding PlaySelectedItemsCommand}"/>
        </CommandBar>
    </Page.BottomAppBar>
    
    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listView.(RelativePanel.Below)" Value="randomPlayPanel"/>
                        <Setter Target="pageContent.(RelativePanel.AlignTopWithPanel)" Value="False"/>
                        <Setter Target="pageContent.(RelativePanel.Below)" Value="pageHeader"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="listView.(RelativePanel.Below)" Value="randomPlayPanel"/>
                        <Setter Target="pageContent.(RelativePanel.AlignTopWithPanel)" Value="False"/>
                        <Setter Target="pageContent.(RelativePanel.Below)" Value="pageHeader"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--  header  -->
        <usercontrols:AutoSuggestionPageHeader x:Name="pageHeader"
                                               x:Uid="AlbumsPage_Header"
                                               PlaceholderText="Search"
                                               QueryIcon="Find"
                                               ButtonIcon="Find"
                                               QueryText="{x:Bind ViewModel.QueryText, Mode=TwoWay}"
                                               ItemsSource="{x:Bind ViewModel.SearchSuggestions}"
                                               RelativePanel.AlignLeftWithPanel="True"
                                               RelativePanel.AlignRightWithPanel="True"
                                               RelativePanel.AlignTopWithPanel="True"
                                               Visibility="Visible">
            <interactivity:Interaction.Behaviors>
                <core:EventTriggerBehavior EventName="TextChanged">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.TextChangedCommand}"/>
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="QuerySubmitted">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.QuerySubmittedCommand}" InputConverter="{StaticResource AutoSuggestQueryParameterConverter}" />
                </core:EventTriggerBehavior>
                <core:EventTriggerBehavior EventName="SuggestionChosen">
                    <core:InvokeCommandAction Command="{x:Bind ViewModel.SuggestionChosenCommand}"/>
                </core:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>
        </usercontrols:AutoSuggestionPageHeader>

        <RelativePanel x:Name="pageContent" 
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"
                       RelativePanel.AlignTopWithPanel="True"
                       RelativePanel.AlignBottomWithPanel="True"
                       RelativePanel.Below="pageHeader">

            <!-- normal header  -->
            <TextBlock x:Name="normalPageHeader" x:Uid="AlbumsPage_PageHeader" Text="Albums" Style="{StaticResource PageHeaderTextBlockStyle}"
                       Visibility="Collapsed"
                       RelativePanel.AlignTopWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"/>

            <TextBlock x:Name="narrowPageTitle" x:Uid="SearchResultAlbumsPage_PageTitle" Text="Song" Style="{StaticResource PageTitleTextBlockStyle}"
                       Visibility="Collapsed"
                       RelativePanel.AlignTopWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True"/>
            
            <StackPanel x:Name="filterPanel" Padding="20,10,20,0"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="normalPageHeader">
                <StackPanel Orientation="Horizontal" >
                    <TextBlock x:Uid="AlbumsPage_FilterPanel_TxtGenre" Text="Genre" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                    <HyperlinkButton x:Name="buttonGenre" Command="{Binding OpenGenreFlyoutCommand}" VerticalAlignment="Center" Padding="10,0,0,0">
                        <HyperlinkButton.Content>
                            <TextBlock TextTrimming="CharacterEllipsis" Style="{StaticResource BodyTextBlockStyle}" Text="{Binding SelectedGenre.Name}"/>
                        </HyperlinkButton.Content>
                        <HyperlinkButton.ContextFlyout>
                            <Flyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsGenreFlyoutOpen, Mode=TwoWay}"
                                    controlextensions:FlyoutExtensions.Parent="{Binding ElementName=buttonGenre}"
                                    controlextensions:FlyoutExtensions.ItemsSource="{Binding Genres}">
                                <controlextensions:FlyoutExtensions.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <MenuFlyoutItem Command="{Binding MenuItemClickedCommand}"
                                                    CommandParameter="{Binding}"
                                                    Text="{Binding Text}"/>
                                        </Grid>
                                    </DataTemplate>
                                </controlextensions:FlyoutExtensions.ItemTemplate>
                            </Flyout>
                        </HyperlinkButton.ContextFlyout>
                    </HyperlinkButton>
                </StackPanel>
            </StackPanel>

            <StackPanel x:Name="randomPlayPanel" Padding="20,10,20,0"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.AlignRightWithPanel="True" RelativePanel.Below="filterPanel">
                <HyperlinkButton x:Name="buttonPlayFiltered" Command="{Binding PlayRandomCommand}" VerticalContentAlignment="Center" Foreground="{ThemeResource SystemBaseHighColor}">
                    <Grid VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <FontIcon Glyph="&#xE8B1;" Grid.Column="0"/>
                        <TextBlock TextTrimming="WordEllipsis" TextWrapping="NoWrap" Margin="6,0,0,0" Grid.Column="1">
                            <Run x:Uid="AlbumsPage_PlayRandom" Text="Shuffle all"/>
                            <Run Text="("/><Run Text="{Binding TracksCount}"/><Run Text=")"/>
                        </TextBlock>
                    </Grid>
                </HyperlinkButton>
            </StackPanel>



            <ListView x:Name="listView"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="randomPlayPanel"
                      ItemsSource="{Binding Albums}" DataFetchSize="1"
                      SelectionMode="{Binding HasSelectedItems, Converter={StaticResource BooleanToSelectionModeConverter}}"
                      IsItemClickEnabled="{Binding HasSelectedItems, Converter={StaticResource InverseBooleanConverter}}"
                      controlextensions:ListViewExtensions.Command="{Binding SelectItemCommand}"
                      controlextensions:ListViewExtensions.SelectedItems="{Binding SelectedItems, Mode=TwoWay}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Padding" Value="0,4"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="12,6,0,6" x:Name="listViewItem">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <FlyoutBase.AttachedFlyout>
                                <MenuFlyout controlextensions:FlyoutExtensions.IsOpen="{Binding IsOpen, Mode=TwoWay}"
                                        controlextensions:FlyoutExtensions.Parent="{Binding ElementName=listViewItem}"
                                        controlextensions:FlyoutExtensions.OffsetPoint="{Binding OffsetPoint, Mode=TwoWay}">
                                    <MenuFlyout.Items>
                                        <MenuFlyoutItem x:Uid="MenuFlyoutPlayAll" Text="Play" Command="{Binding DataContext.PlayAllCommand, ElementName=listView}" CommandParameter="{Binding}"/>
                                        <MenuFlyoutSeparator/>
                                        <MenuFlyoutItem x:Uid="MenuFlyoutSelectItems" Text="Select"
                                            Command="{Binding DataContext.SelectItemsCommand, ElementName=listView}" CommandParameter="{Binding}"
                                            Visibility="{Binding DataContext.HasSelectedItems, ElementName=listView, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=true, Mode=TwoWay}"/>
                                    </MenuFlyout.Items>
                                </MenuFlyout>
                            </FlyoutBase.AttachedFlyout>
                            <Image x:Name="image" Stretch="Uniform" Source="{Binding Path=ImageSource}" Grid.Column="0" Width="100" />
                            <StackPanel Orientation="Vertical" Grid.Column="1" Margin="10,0">
                                <TextBlock Text="{Binding Title}" TextWrapping="NoWrap" TextTrimming="WordEllipsis" Style="{StaticResource SubtitleTextBlockStyle}" />
                                <TextBlock Text="{Binding Subtitle}" FontWeight="SemiLight" x:Name="description" TextWrapping="NoWrap" TextTrimming="WordEllipsis" FontSize="14"/>
                            </StackPanel>
                            <interactivity:Interaction.Behaviors>
                                <core:EventTriggerBehavior EventName="RightTapped">
                                    <core:InvokeCommandAction Command="{Binding DataContext.OpenMobileFlyoutCommand, ElementName=listView}"
                                                              InputConverter="{StaticResource RightTappedToPointConverter}"
                                                              InputConverterParameter="{Binding ElementName=listViewItem}"/>
                                </core:EventTriggerBehavior>
                            </interactivity:Interaction.Behaviors>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </RelativePanel>

    </RelativePanel>
</Page>
